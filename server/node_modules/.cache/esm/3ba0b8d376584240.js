let Account,Chore,Chores;_765‍.x([["addChore",()=>addChore],["getChores",()=>getChores]]);_765‍.w("../models/user",[["default",["Account"],function(v){Account=v}]]);_765‍.w("../models/chores",[["default",["Chore"],function(v){Chore=v}]]);_765‍.w("../../client/components/cards/ChoresList",[["default",["Chores"],function(v){Chores=v}]]);


const mongoose = require("mongoose");

       async function addChore(req,res){
  const {chore, user_id} = req.body;
  const newChore = new Chore({
    user_id: user_id,
    name: chore,
    completed: false,
  });

  try{
     newChore.save()
     return res.status(200).send({
      success:true, message: "Chore Added!"
    })
  } catch (err) {
    _765‍.g.console.log(err);
  }
}

       async function getChores(req,res){
  const {user_id} = req.params;
  try{
    let user = await Account.findOne({_id: user_id}).select('-password -secret -secretQuestion -rentCollected -rentPaid -rent')
    let roommates = [];
    for (let i=0; i<user.roommates.length; i++){
      let roommate = await Account.findOne({_id: user.roommates[i]}).select("name");
      roommates.push({name: roommate.name});
      let chores = await Chores.find({user_id: user.roommates[i]});
      _765‍.g.console.log(chores);
    }
    _765‍.g.console.log(roommates)
  } catch(err) {
    _765‍.g.console.log(err);
  }
}